===============================
Doctest for 2-matrix_divided.py
===============================

This doctest contain one function, which is called
``matrix_divided()``.

Numbers
=======

The ``matrix_divided`` returns a new matrix by dividing each element.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

It also works with floating-point values by casting them into integers.

::

    >>> matrix_divided([[1.33, 1.67, 1.0], [1.33, 1.67, 2.0]], 3)
    [[0.44, 0.56, 0.33], [0.44, 0.56, 0.67]]

It also works with negative values.

::

    >>> matrix_divided([[-1, 2, -3], [4, -5, -6]], 3)
    [[-0.33, 0.67, -1.0], [1.33, -1.67, -2.0]]
    

It doen't work with one argument.

::

    >>> matrix_divided(10)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

It work with two arguments.

::

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [4, 5, 6]], 10)
    Traceback (most recent call last):
        ... 
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

    >>> matrix_divided()
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

It doesn't work with zero division

::

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Each row of the matrix must be of the same size

::

    >>> matrix_divided([[1, 2, 3], [5, 6], [1, 3, 4, 2]], 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Non-Numbers
===========

The ``matrix_divided()`` does not work with non numbers

::

    >>> matrix_divided([[1, 'a', 3], [4, '1', 6.0]], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
    >>> matrix_divided('a', 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a list of lists

    >>> matrix_divided(2, 'c')
    Traceback (most recent call last):
        ...
    TypeError: div must be an integer or a float

    >>> matrix_divided({'a': 10}, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a list of lists
